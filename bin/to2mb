#!/usr/bin/env bash

cd "$(dirname "$0")"

readonly TWO_MB=2000000
readonly OUTPUT_DIRNAME="out2mb"
readonly SCALE="0.8"

function getWidthAndHeight() {
  sips --getProperty pixelWidth  "$1" | tail -n 1
  sips --getProperty pixelHeight "$1" | tail -n 1
}

function getTotalPixels() {
  getWidthAndHeight "$1" | awk 'BEGIN { pixels = 1 } { pixels *= $2; } END { print pixels; }'
}

function getLongSidePixels() {
  getWidthAndHeight "$1" | awk 'BEGIN { max = 0 } { if (max < $2) max = $2; } END { print max; }'
}

function getFileSizeBytes() {
  ls -l "$1" | awk '{ print $5 }'
}

function convertImage() {
  local totalPixels="$(getTotalPixels "$1")"
  local imageSizeBytes="$(getFileSizeBytes "$1")"
  local totalPixelsAfter="$((TWO_MB * totalPixels / imageSizeBytes))" # 2MBにするための全体のピクセル数を求める

  local longSidePixels="$(getLongSidePixels "$1")"
  local longSidePixelsAfter="$(bc <<< "scale=10; $longSidePixels / sqrt($totalPixels / $totalPixelsAfter) * $SCALE")"
  sips --resampleHeightWidthMax "$longSidePixelsAfter" "$1" --out "$2" 2> /dev/null | head -n 1
}

function isImage() {
  [[ "$(file "$1")" =~ .*image\ data.* ]]
}

printf "変換対象のフォルダ: \033[01;30;43m %s \033[0m\n" "$(pwd)"
read -p "フォルダ内のすべての画像を2MB以下に変換しますか？ [yes/no]: " answer

case "$answer" in
  "yes" | "Yes" | "YES" ) ;;
  * )
    read -p "キャンセルしました。何かキーを押してください..."
    exit 1 ;;
esac

find . -type f | while read file
do
  if isImage "$file"; then
    # アウトプット用のディレクトリー内のファイルでは処理をスキップする
    if [[ "$file" =~ .*"$OUTPUT_DIRNAME".* ]]; then
      continue
    fi

    output_path="$(dirname "$file")/$OUTPUT_DIRNAME"

    # アウトプット用のディレクトリーが存在しない場合は作成しておく
    mkdir -p "$output_path"

    # 画像が2MBより小さい場合はアウトプット用のディレクトリーにコピーして終了
    if [[ "$(getFileSizeBytes "$file")" -lt "$TWO_MB" ]]; then
      cp "$file" "$output_path"
      continue
    fi

    convertImage "$file" "$output_path"
  fi
done

read -p "何かキーを押してください..."
