#!/bin/bash

set -euC

function get_status_str() {
  local flags=''
  # Modified
  if ! git diff --no-ext-diff --quiet; then
    flags="*$flags"
  fi

  # Staged
  if ! git diff --no-ext-diff --staged --quiet; then
    flags="~$flags"
  fi

  # Stash
  if git rev-parse --verify --quiet refs/stash >/dev/null; then
    flags="\$$flags"
  fi

  # Untracked
  if git ls-files --others --exclude-standard --directory --no-empty-directory --error-unmatch -- ':/*' >/dev/null 2>/dev/null; then
    flags="…$flags"
  fi

  echo "$flags"
}

function get_branch_name() {
  local branch_name=$(git rev-parse --abbrev-ref HEAD)
  echo $branch_name
}

function get_hash() {
  local hash=$(git log --pretty=format:'%h' -n 1)
  echo $hash
}

function prompt() {
  local branch_name=$(get_branch_name)
  # branch_nameがmasterだったらmasterと表示しない
  [[ $branch_name = "master" ]] && branch_name=""
  # branch_nameの前にブランチのアイコンみたいなのを入れる
  branch_name="  ${branch_name:+$branch_name }"

  # status_strが空文字列でなければ、status_strの前にスペースを1個だけ入れる
  local status_str=$(get_status_str); status_str=${status_str:+$status_str }
  # local h=$(get_hash)

  # デフォルトのカラーは緑色
  local color_code=42

  if [[ $status_str =~ .*\*.* ]]; then
    # Modifiedがあったら赤色にする
    color_code=41
  elif [[ $status_str =~ .*~.* ]]; then
    # Stagedがあったら黄色にする
    color_code=43
  fi
  echo -e -n "\033[37;${color_code}m"
  echo -e -n "\033[1m${branch_name}${status_str}\033[0m"
  echo -e -n "\033[$(($color_code - 10));49m\033[0m "
}

function git_ps() {
  # カレントディレクトリがgitリポジトリならprompt関数を実行
  if git rev-parse &>/dev/null; then
    prompt
  else
    echo -e -n "\033[37;49m\033[0m "
  fi
}

if [[ ${BASH_SOURCE[0]} == $0 ]]; then
  git_ps
fi
